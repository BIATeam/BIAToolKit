<UserControl x:Class="BIA.ToolKit.UserControls.DtoGeneratorUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BIA.ToolKit.Application.ViewModel;assembly=BIA.ToolKit.Application" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:behaviors="clr-namespace:BIA.ToolKit.Behaviors"
             xmlns:helpers="clr-namespace:BIA.ToolKit.Helper"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1920">
    <UserControl.DataContext>
        <local:DtoGeneratorViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        <Thickness x:Key="FormFirstRowMargin">0,0,0,5</Thickness>
        <Thickness x:Key="FormRowMargin">0,5</Thickness>
    </UserControl.Resources>

    <Grid Margin="10" IsEnabled="{Binding IsFileGeneratorInit}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="0.1*"/>
                <ColumnDefinition />
                <ColumnDefinition Width="0.1*"/>
                <ColumnDefinition />
                <ColumnDefinition Width="0.1*"/>
                <ColumnDefinition Width="160"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Margin="{StaticResource FormFirstRowMargin}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <ComboBox Grid.Column="0" Grid.Row="0" Style="{StaticResource MaterialDesignFilledComboBox}" materialDesign:HintAssist.Hint="Entity" x:Name="EntitiesComboBox" ItemsSource="{Binding EntitiesNames}" SelectedValue="{Binding SelectedEntityName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsEnabled="{Binding IsProjectChosen}" SelectionChanged="EntitiesComboBox_SelectionChanged"/>
                    <Label Grid.Column="0" Grid.Row="1" Content="Generation was already done for this Entity" Foreground="Yellow" Visibility="{Binding WasAlreadyGenerated, Converter={StaticResource BoolToVisConverter}}" d:Visibility="Visible"/>
                    <Button Grid.Column="1" Margin="5,0,0,0" IsEnabled="{Binding IsProjectChosen}" x:Name="RefreshDtoList" Click="RefreshEntitiesList_Click" ToolTip="Refresh list">
                        <Image Source="/Images/rafraichir-32.png" />
                    </Button>
                </Grid>
                <TextBox Margin="{StaticResource FormRowMargin}" Grid.Row="1" Style="{StaticResource MaterialDesignFilledTextBox}" materialDesign:HintAssist.Hint="Domain" Text="{Binding EntityDomain, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsEnabled="{Binding IsEntitySelected}"/>
                <TextBox Margin="{StaticResource FormRowMargin}" Grid.Row="2" Style="{StaticResource MaterialDesignFilledTextBox}" materialDesign:HintAssist.Hint="Ancestor Team" Text="{Binding AncestorTeam, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
            </Grid>

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <ComboBox Margin="{StaticResource FormFirstRowMargin}" Grid.Column="0" Style="{StaticResource MaterialDesignFilledComboBox}" materialDesign:HintAssist.Hint="Base Key Type"  ItemsSource="{Binding BaseKeyTypeItems}" SelectedValue="{Binding SelectedBaseKeyType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsEnabled="{Binding IsEntitySelected}"/>
                <CheckBox Grid.Row="1" Content="Team" Foreground="White" IsChecked="{Binding IsTeam,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsEntitySelected}"/>
                <CheckBox Grid.Row="2" Content="Versioned" Foreground="White" IsChecked="{Binding IsVersioned,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsEntitySelected}"/>
                <CheckBox Grid.Row="3" Content="Fixable" Foreground="White" IsChecked="{Binding IsFixable,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsEntitySelected}"/>
                <CheckBox Grid.Row="4" Content="Archivable" Foreground="White" IsChecked="{Binding IsArchivable,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsEntitySelected}"/>
            </Grid>

            <Button VerticalAlignment="Top" Grid.Column="6" Style="{StaticResource MaterialDesignRaisedSecondaryDarkButton}" x:Name="GenerateButton" Content="Generate" Height="50" Click="GenerateButton_Click" IsEnabled="{Binding IsGenerationEnabled}"></Button>
        </Grid>

        <Grid Grid.Row="1" Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Content="Properties" FontWeight="Bold"/>
                <Grid Grid.Row="1" Margin="10,5,10,0">
                    <Grid Background="#323232" Opacity="0.7"/>
                    <TreeView Name="ClassTreeView" HorizontalAlignment="Stretch" ItemsSource="{Binding EntityProperties}" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type local:EntityProperty}" ItemsSource="{Binding Properties}">
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="0,0,5,0"/>
                                    <TextBlock FontWeight="Bold" Text="{Binding Name}" Margin="0,0,5,0" />
                                    <TextBlock Text="{Binding Type, StringFormat=({0})}" />
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
            </Grid>


            <Grid Grid.Column="1" Grid.Row="1" Margin="10,50,10,0" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Button Grid.Row="0" Margin="0,0,0,5" Content="Map to ➜" x:Name="SelectProperties"  Click="SelectProperties_Click" ToolTip="Select properties" IsEnabled="{Binding IsEntitySelected}"></Button>
                <Button Grid.Row="1" Margin="0,5" Content="Remove all" x:Name="RemoveAllMappingProperties" Click="RemoveAllMappingProperties_Click" ToolTip="Select properties" IsEnabled="{Binding HasMappingProperties}"></Button>
            </Grid>

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Content="Mapping" FontWeight="Bold"/>
                <Grid Grid.Row="1" Margin="10,5,10,0">
                    <Grid Background="#323232" Opacity="0.7"/>
                    <ListView Name="PropertiesListView" ItemsSource="{Binding MappingEntityProperties}" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible">
                        <i:Interaction.Behaviors>
                            <behaviors:ListViewDragDropBehavior MoveCommand="{Binding MoveMappedPropertyCommand}" />
                        </i:Interaction.Behaviors>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:DragDropHelper.IsDropTarget)}" Value="True">
                                        <Setter Property="Background" Value="#595959"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="1" Width="18" Height="18" Padding="5" BorderThickness="0" Command="{Binding DataContext.RemoveMappingPropertyCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}">
                                                    <Image Source="/Images/cross.png" RenderOptions.BitmapScalingMode="Fant"/>
                                                </Button>
                                                <Image Grid.Column="0" Opacity="0.6" Width="15" Height="15" Source="/Images/drag_icon.png" RenderOptions.BitmapScalingMode="Fant" Cursor="SizeNS" PreviewMouseLeftButtonDown="DragHandle_PreviewMouseLeftButtonDown" MouseMove="DragHandle_MouseMove"  />
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Entity property">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock FontWeight="Bold" Text="{Binding EntityCompositeName}"></TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Mapping property">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <TextBox
                                                        Padding="5" MinWidth="100"
                                                x:Name="MappingPropertyTextBox"
                                                Text="{Binding MappingName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                TextChanged="MappingPropertyTextBox_TextChanged">
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFilledTextBox}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding HasMappingNameError }" Value="True">
                                                                    <Setter Property="BorderBrush" Value="Red" />
                                                                    <Setter Property="BorderThickness" Value="1" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding HasMappingNameError }" Value="False">
                                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                                    <Setter Property="BorderThickness" Value="0" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                                <TextBlock Text="{Binding MappingNameError}" Foreground="Red" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding HasMappingNameError}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding HasMappingNameError}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Required">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding IsRequired, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></CheckBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Parent Identifier">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <CheckBox HorizontalAlignment="Center" 
                                                IsChecked="{Binding IsParent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                Command="{Binding DataContext.SetMappedPropertyIsParentCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"
                                                Visibility="{Binding IsVisibleIsParentCheckbox, Converter={StaticResource BoolToVisConverter}}"></CheckBox>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Date Type">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <ComboBox 
                                                ItemsSource="{Binding MappingDateTypes}" 
                                                SelectedValue="{Binding MappingDateType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                Visibility="{Binding IsVisibleDateTypesComboxBox, Converter={StaticResource BoolToVisConverter}}"></ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Option Mapping ID">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <ComboBox 
                                                x:Name="MappingOptionId"
                                                ItemsSource="{Binding OptionEntityIdProperties}" 
                                                SelectedValue="{Binding OptionEntityIdProperty, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                Visibility="{Binding IsOption, Converter={StaticResource BoolToVisConverter}}"
                                                SelectionChanged="MappingOptionId_SelectionChanged"></ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Option ID">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <ComboBox 
                                                ItemsSource="{Binding OptionIdProperties}" 
                                                SelectedValue="{Binding OptionIdProperty, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                Visibility="{Binding IsVisibleOptionPropertiesComboBox, Converter={StaticResource BoolToVisConverter}}"></ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Option Display">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <ComboBox 
                                                ItemsSource="{Binding OptionDisplayProperties}" 
                                                SelectedValue="{Binding OptionDisplayProperty, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                Visibility="{Binding IsVisibleOptionPropertiesComboBox, Converter={StaticResource BoolToVisConverter}}"></ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Entity Type">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding EntityType}"></TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Mapping Type">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding MappingType}"></TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
