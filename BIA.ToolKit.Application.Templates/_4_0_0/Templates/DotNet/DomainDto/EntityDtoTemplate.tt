<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="$(T4Includes_4_0_0)\TemplateDto.ttinclude" #>
<#@ output extension=".cs" #>
// <copyright file="<#= ModelInstance.EntityName #>Dto.cs" company="<#= ModelInstance.CompanyName #>">
// Copyright (c) <#= ModelInstance.CompanyName #>. All rights reserved.
// </copyright>

namespace <#= ModelInstance.CompanyName #>.<#= ModelInstance.ProjectName #>.Domain.Dto.<#= ModelInstance.DomainName #>
{<#
    ModelInstance.ClearUse();
    if (ModelInstance.Properties.Count() > 0) { 
        ModelInstance.Use("System");   
    }
    if(ModelInstance.HasCollectionOptions) { 
        ModelInstance.Use("System.Collections.Generic");   
    }
    if(!ModelInstance.IsTeamType) { 
        ModelInstance.Use("BIA.Net.Core.Domain.Dto.Base");   
    }
    if (ModelInstance.Properties.Count() > 0) { 
        ModelInstance.Use("BIA.Net.Core.Domain.Dto.CustomAttribute");   
    }
    if(ModelInstance.HasOptions) { 
        ModelInstance.Use("BIA.Net.Core.Domain.Dto.Option");   
    }
    if(ModelInstance.IsTeamType) { 
        ModelInstance.Use("BIA.Net.Core.Domain.Dto.User");   
    } #><#= ModelInstance.WritteUsing() #>
    /// <summary>
    /// The DTO used to represent <#= ModelInstance.EntityNameArticle #> <#= ModelInstance.EntityName.ToLiteral() #>.
    /// </summary>
<#  if(ModelInstance.HasAncestorTeam) { #>
    [BiaDtoClass(AncestorTeam = "<#= ModelInstance.AncestorTeam #>")]
<#  } #>
<# if (ModelInstance.Properties.Count() == 0) { #>
#pragma warning disable S2094 // Classes should not be empty
<#  } #>
    public class <#= ModelInstance.EntityName #>Dto : <#= ModelInstance.IsTeamType ? "TeamDto" : $"BaseDto<{ModelInstance.BaseKeyType}>" #>
<# if (ModelInstance.Properties.Count() == 0) { #>
#pragma warning restore S2094 // Classes should not be empty
<#  } #>
    {
<# var index = 0;  #>
<# foreach(var prop in ModelInstance.PropertiesToGenerate) { #>
        /// <summary>
        /// <#= prop.GenerateGetSetComment(ModelInstance.EntityName) #>.
        /// </summary>
        [BiaDtoField(<#= prop.BiaDtoFieldAttributeProperties #>)]
        public <#= prop.MappingType #> <#= prop.MappingName #> { get; set; }
<# index++;  #>
<# if(index != ModelInstance.PropertiesToGenerate.Count()) {#>

<# }#>
<# } #>
    }
}
