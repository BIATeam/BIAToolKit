<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="$(TargetPath)" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="BIA.ToolKit.Application.Templates" #>
<#@ import namespace="BIA.ToolKit.Application.Templates._5_0_0.Models" #>
<#@ import namespace="BIA.ToolKit.Application.Templates._5_0_0.Mocks" #>
<#@ output extension=".html" #>
<#@ parameter type="BIA.ToolKit.Application.Templates._5_0_0.Models.EntityCrudModel" name="Model" #>
<# var ModelInstance = Model ?? new EntityCrudMock(); #>
<app-<#= ModelInstance.EntityName.ToKebabCase() #>-form
  *ngIf="crudItemService.crudItem$ | async; let crudItem"
  [crudItem]="crudItem"
  [fields]="crudConfiguration.fieldsConfig.columns"
  [formLayoutConfig]="crudConfiguration.formLayoutConfig"
  [formReadOnlyMode]="formReadOnlyMode"
  [dictOptionDtos]="(<#= ModelInstance.EntityName.ToCamelCase() #>Service.optionsService.dictOptionDtos$ | async) ?? []"
  [isCrudItemOutdated]="isCrudItemOutdated"
  [showFixableState]="crudConfiguration.isFixable"
  [canFix]="canFix"
  (cancelled)="onCancelled()"
  (save)="onSubmitted($event)"
  (fixedChanged)="crudItemService.updateFixedStatus(crudItem.id, $event)"
  [showPopupButton]="showPopupButton"
  [showSplitButton]="showSplitButton"
  [showFullPageButton]="showFullPageButton"
  (layoutChanged)="notifyLayoutChange($event)"></app-<#= ModelInstance.EntityName.ToKebabCase() #>-form>
<bia-spinner
  *ngIf="<#= ModelInstance.EntityName.ToCamelCase() #>Service.loadingGet$ | async"
  [overlay]="true"></bia-spinner>
