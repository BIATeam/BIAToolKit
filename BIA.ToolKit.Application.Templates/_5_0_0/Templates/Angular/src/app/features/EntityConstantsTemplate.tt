<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="$(T4Includes_5_0_0)\TemplateCrud.ttinclude" #>
<#@ output extension=".ts" #>
import { 
<#  if(ModelInstance.HasReadOnlyFormMode) { #>
	FormReadOnlyMode,
<#  } #>
	CrudConfig 
} from 'src/app/shared/bia-shared/feature-templates/crud-items/model/crud-config';
<#  if(ModelInstance.HasAncestorTeam) { #>
import { TeamTypeId } from 'src/app/shared/constants';
<#  } #>
import {
  <#= ModelInstance.EntityName #>,
  <#= ModelInstance.EntityName.ToCamelCase() #>FieldsConfiguration,
  <#= ModelInstance.EntityName.ToCamelCase() #>FormLayoutConfiguration,
} from './model/<#= ModelInstance.EntityName.ToKebabCase() #>';

// TODO after creation of CRUD <#= ModelInstance.EntityName #> : adapt the global configuration
export const <#= ModelInstance.EntityName.ToCamelCase() #>CRUDConfiguration: CrudConfig<<#= ModelInstance.EntityName #>> = new CrudConfig({
  // IMPORTANT: this key should be unique in all the application.
  featureName: '<#= ModelInstance.EntityNamePlural.ToKebabCase() #>',
  fieldsConfig: <#= ModelInstance.EntityName.ToCamelCase() #>FieldsConfiguration,
  formLayoutConfig: <#= ModelInstance.EntityName.ToCamelCase() #>FormLayoutConfiguration,
  useCalcMode: <# if(ModelInstance.IsTeam) { #>false<#  } else { #>true<# } #>,
  useSignalR: false,
  useView: true,
<#  if(ModelInstance.HasAncestorTeam) { #>
  useViewTeamWithTypeId: TeamTypeId.<#= ModelInstance.AncestorTeamName #>, // use to filter view by teams => should know the type of team
<#  } #>
  usePopup: <# if(ModelInstance.IsTeam) { #>true<#  } else { #>false<# } #>,
  useSplit: false,
  useOfflineMode: false,
  useCompactMode: false,
  useVirtualScroll: false,
<#  if(ModelInstance.HasReadOnlyFormMode) { #>
  formEditReadOnlyMode: FormReadOnlyMode.on,
<#  } #>
  // IMPORTANT: this key should be unique in all the application.
  // storeKey: 'feature-' + featureName,
  // IMPORTANT: this is the key used for the view management it should be unique in all the application (except if share same views).
  // tableStateKey: featureName + 'Grid',
});
