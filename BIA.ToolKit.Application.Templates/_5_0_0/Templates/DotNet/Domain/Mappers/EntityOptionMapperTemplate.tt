<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="$(T4Includes_5_0_0)\TemplateOption.ttinclude" #>
<#@ output extension=".cs" #>
// <copyright file="<#= ModelInstance.EntityName #>OptionMapper.cs" company="<#= ModelInstance.CompanyName #>">
// Copyright (c) <#= ModelInstance.CompanyName #>. All rights reserved.
// </copyright>

namespace <#= ModelInstance.CompanyName #>.<#= ModelInstance.ProjectName #>.Domain.<#= ModelInstance.DomainName #>.Mappers
{
    using System;
    using System.Linq.Expressions;
    using BIA.Net.Core.Domain;
    using BIA.Net.Core.Domain.Dto.Option;
    using <#= ModelInstance.CompanyName #>.<#= ModelInstance.ProjectName #>.Domain.<#= ModelInstance.DomainName #>.Entities;

    /// <summary>
    /// The mapper used for <#= ModelInstance.EntityName.ToLiteral() #> option.
    /// </summary>
    public class <#= ModelInstance.EntityName #>OptionMapper : BaseMapper<OptionDto, <#= ModelInstance.EntityName #>, <#= ModelInstance.BaseKeyType #>>
    {
        /// <inheritdoc cref="BaseMapper{TDto,TEntity}.EntityToDto"/>
        public override Expression<Func<<#= ModelInstance.EntityName #>, OptionDto>> EntityToDto()
        {
            return entity => new OptionDto
            {
                Id = entity.Id,
                Display = entity.<#= ModelInstance.OptionDisplayName #>,
            };
        }
    }
}
