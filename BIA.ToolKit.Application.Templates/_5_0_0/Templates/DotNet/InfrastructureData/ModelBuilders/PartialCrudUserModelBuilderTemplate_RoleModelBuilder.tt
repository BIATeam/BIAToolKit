<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="$(TargetPath)" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="BIA.ToolKit.Application.Templates" #>
<#@ import namespace="BIA.ToolKit.Application.Templates._5_0_0.Models" #>
<#@ import namespace="BIA.ToolKit.Application.Templates._5_0_0.Mocks" #>
<#@ output extension=".cs" #>
<#@ parameter type="BIA.ToolKit.Application.Templates._5_0_0.Models.EntityCrudModel" name="Model" #>
<# 
var ModelInstance = Model ?? new EntityCrudMock();
if(ModelInstance.IsTeam) {
#>
            // BIAToolKit - Begin Partial RoleModelBuilder <#= ModelInstance.EntityName #>
            modelBuilder.Entity<Role>().HasData(new Role { Id = (int)RoleId.<#= ModelInstance.EntityName #>Admin, Code = "<#= ModelInstance.EntityName #>_Admin", Label = "<#= ModelInstance.EntityName #> administrator" });
<#  if(ModelInstance.HasParent) { #>
            modelBuilder.Entity<Role>().HasData(new Role { Id = (int)RoleId.<#= ModelInstance.ParentName #>TeamLeader, Code = "<#= ModelInstance.ParentName #>_TeamLeader", Label = "<#= ModelInstance.ParentName #> Team leader" });
<#  } #>

            // BIAToolKit - End Partial RoleModelBuilder <#= ModelInstance.EntityName #>
<# }  #>